/*
LeetCode 169. Majority Element.

난이도 : 3 
< 두가지 방식 >
1. 정렬 후, 반복되는 것에 대한 count를 세고 하나하나 판별해주는 알고리즘
2. 무어 알고리즘 : 반 이상 나타나는 원소이므로, 정렬 후 중간에 위치하는 원소를 반환하면 된다.
*/

class Solution {
public:
    int majorityElement(vector<int>& nums) {
        
        /* 1 */
        
        int N = nums.size();
        
        sort(nums.begin(), nums.end());
        int count = 0;
        int ret = 0;
        
        if(N==1){
            return nums[0];
        }
        
        for(int i = 0 ; i<N-1; i ++){
            cout<<"i : "<<nums[i]<<" i+1 : "<<nums[i+1]<<endl;
            
            if(nums[i]==nums[i+1]){
                count ++;
            }else{
                count = 0;
            }
            
            if(count >= N/2) 
                ret = nums[i];
        }
        
        return ret;
        
        /* 2 */ 
        
//         int N = nums.size();
        
//         sort(nums.begin(), nums.end());
        
//         return (nums[N/2]);
        
        
    }
};