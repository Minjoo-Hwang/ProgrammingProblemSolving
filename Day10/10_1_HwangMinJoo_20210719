/*
Leetcode 226. Invert Binary Tree.

이진 트리의 left, right child의 위치를 바꿔주는 함수 구현
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        //원래 traversal 순서 : me -> left -> right
        //invert 순서 : me -> right -> left
        
        if(root == NULL)    return NULL;
        
        TreeNode* tmp;
        
        tmp = root->right;
        root->right = root->left;
        root->left = tmp;
        
        invertTree(root->left);
        invertTree(root->right);
           
        return root;
    }
};